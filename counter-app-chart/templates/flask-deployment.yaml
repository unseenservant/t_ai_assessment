apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.app.name }}
  labels:
    {{- include "counter-app.flaskLabels" . | nindent 4 }}
spec:
  replicas: {{ .Values.app.replicaCount }}
  selector:
    matchLabels:
      {{- include "counter-app.flaskSelectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "counter-app.flaskSelectorLabels" . | nindent 8 }}
    spec:
      initContainers:
        - name: init-postgres
          image: postgres:13
          command: ['sh', '-c', 
            'until pg_isready -h {{ .Values.postgres.name }} -p {{ .Values.postgres.service.port }} -U {{ .Values.database.user }}; 
            do echo waiting for postgres; sleep 2; done;']
      containers:
        - name: {{ .Values.app.name }}
          image: "{{ .Values.app.image.repository }}:{{ .Values.app.image.tag }}"
          imagePullPolicy: {{ .Values.app.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.app.service.targetPort }}
          env:
            - name: DB_USER
              valueFrom:
                configMapKeyRef:
                  name: postgres-config
                  key: POSTGRES_USER
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_PASSWORD
            - name: DB_HOST
              value: {{ .Values.postgres.name }}
            - name: DB_PORT
              value: "{{ .Values.postgres.service.port }}"
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: postgres-config
                  key: POSTGRES_DB
          resources:
            {{- toYaml .Values.app.resources | nindent 12 }}
          livenessProbe:
            httpGet:
              path: {{ .Values.app.livenessProbe.path }}
              port: {{ .Values.app.service.targetPort }}
            initialDelaySeconds: {{ .Values.app.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.app.livenessProbe.periodSeconds }}
          readinessProbe:
            httpGet:
              path: {{ .Values.app.readinessProbe.path }}
              port: {{ .Values.app.service.targetPort }}
            initialDelaySeconds: {{ .Values.app.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.app.readinessProbe.periodSeconds }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.app.name }}
  labels:
    {{- include "counter-app.flaskLabels" . | nindent 4 }}
spec:
  ports:
    - port: {{ .Values.app.service.port }}
      targetPort: {{ .Values.app.service.targetPort }}
  selector:
    {{- include "counter-app.flaskSelectorLabels" . | nindent 4 }}
  type: {{ .Values.app.service.type }}
