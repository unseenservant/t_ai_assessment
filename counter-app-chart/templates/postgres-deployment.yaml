apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.postgres.name }}
  labels:
    {{- include "counter-app.postgresLabels" . | nindent 4 }}
spec:
  replicas: {{ .Values.postgres.replicaCount }}
  selector:
    matchLabels:
      {{- include "counter-app.postgresSelectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "counter-app.postgresSelectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ .Values.postgres.name }}
          image: "{{ .Values.postgres.image.repository }}:{{ .Values.postgres.image.tag }}"
          imagePullPolicy: {{ .Values.postgres.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.postgres.service.port }}
          envFrom:
            - configMapRef:
                name: postgres-config
            - secretRef:
                name: postgres-secret
          {{- if .Values.postgres.persistence.enabled }}
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-data
          {{- end }}
          resources:
            {{- toYaml .Values.postgres.resources | nindent 12 }}
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - {{ .Values.database.user }}
            initialDelaySeconds: {{ .Values.postgres.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.postgres.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.postgres.livenessProbe.timeoutSeconds }}
          readinessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - {{ .Values.database.user }}
            initialDelaySeconds: {{ .Values.postgres.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.postgres.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.postgres.readinessProbe.timeoutSeconds }}
      {{- if .Values.postgres.persistence.enabled }}
      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: postgres-pvc
      {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.postgres.name }}
  labels:
    {{- include "counter-app.postgresLabels" . | nindent 4 }}
spec:
  ports:
    - port: {{ .Values.postgres.service.port }}
      targetPort: {{ .Values.postgres.service.port }}
  selector:
    {{- include "counter-app.postgresSelectorLabels" . | nindent 4 }}
  type: ClusterIP
