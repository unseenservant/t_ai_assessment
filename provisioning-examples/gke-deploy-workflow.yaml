name: Deploy to Google GKE

on:
  workflow_run:
    workflows: ["Build and Push Docker Image"]
    types:
      - completed
  workflow_dispatch:
    inputs:
      image_tag:
        description: 'Docker image tag to deploy'
        required: false
        default: 'latest'

env:
  GCP_PROJECT_ID: counter-app-project
  GKE_CLUSTER_NAME: counter-app-gke-cluster
  GKE_ZONE: us-central1-a
  NAMESPACE: counter-app

jobs:
  deploy-to-gke:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set image tag from workflow dispatch
        if: github.event_name == 'workflow_dispatch'
        run: |
          echo "IMAGE_TAG=${{ github.event.inputs.image_tag }}" >> $GITHUB_ENV

      - name: Download workflow artifact
        if: github.event_name == 'workflow_run'
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: build-and-push-docker-image.yml
          run_id: ${{ github.event.workflow_run.id }}
          name: workflow-data
          path: /tmp/workflow-data

      - name: Set image tag from previous workflow
        if: github.event_name == 'workflow_run'
        run: |
          if [ -f "/tmp/workflow-data/image.txt" ]; then
            IMAGE_TAG=$(cat /tmp/workflow-data/image.txt)
            echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_ENV
          else
            echo "IMAGE_TAG=latest" >> $GITHUB_ENV
          fi

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          install_components: 'gke-gcloud-auth-plugin'
          export_default_credentials: true

      - name: Get GKE credentials
        uses: google-github-actions/get-gke-credentials@v1
        with:
          cluster_name: ${{ env.GKE_CLUSTER_NAME }}
          location: ${{ env.GKE_ZONE }}

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: 'v3.11.1'

      - name: Create namespace if needed
        run: |
          kubectl create namespace ${{ env.NAMESPACE }} --dry-run=client -o yaml | kubectl apply -f -

      - name: Deploy Helm chart
        run: |
          helm upgrade --install counter-app ./counter-app-chart \
            --namespace ${{ env.NAMESPACE }} \
            --set image.repository=${{ secrets.DOCKER_USERNAME }}/counter-app \
            --set image.tag=${IMAGE_TAG:-latest} \
            --set ingress.enabled=true \
            --set ingress.hosts[0].host=counter-app-gke.example.com \
            --set postgres.storage.size=10Gi \
            --set postgres.storage.storageClass=standard \
            --debug